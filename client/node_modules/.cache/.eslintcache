[{"/root/4week/molcam4/client/src/index.js":"1","/root/4week/molcam4/client/src/App.js":"2","/root/4week/molcam4/client/src/reportWebVitals.js":"3","/root/4week/molcam4/client/src/Head.js":"4","/root/4week/molcam4/client/src/loginRegister/Login.js":"5","/root/4week/molcam4/client/src/loginRegister/Unfulfilled.js":"6","/root/4week/molcam4/client/src/loginRegister/Register.js":"7","/root/4week/molcam4/client/src/loginRegister/Fulfilled.js":"8","/root/4week/molcam4/client/src/postboard/Postboard.js":"9","/root/4week/molcam4/client/src/postboard/Detail.js":"10","/root/4week/molcam4/client/src/postboard/Writepost.js":"11","/root/4week/molcam4/client/src/loginRegister/LoginForm.js":"12","/root/4week/molcam4/client/src/postboard/BoardRow.js":"13"},{"size":596,"mtime":1627112528877,"results":"14","hashOfConfig":"15"},{"size":1559,"mtime":1627112528877,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1627112528877,"results":"17","hashOfConfig":"15"},{"size":2421,"mtime":1627112528877,"results":"18","hashOfConfig":"15"},{"size":528,"mtime":1627112528877,"results":"19","hashOfConfig":"15"},{"size":339,"mtime":1627112528877,"results":"20","hashOfConfig":"15"},{"size":712,"mtime":1627112528877,"results":"21","hashOfConfig":"15"},{"size":5033,"mtime":1627283277219,"results":"22","hashOfConfig":"15"},{"size":2766,"mtime":1627112528877,"results":"23","hashOfConfig":"15"},{"size":5803,"mtime":1627112528877,"results":"24","hashOfConfig":"15"},{"size":5957,"mtime":1627112528877,"results":"25","hashOfConfig":"15"},{"size":3727,"mtime":1627278335693,"results":"26","hashOfConfig":"15"},{"size":470,"mtime":1627112528877,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1pypuy5",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},"/root/4week/molcam4/client/src/index.js",[],["63","64"],"/root/4week/molcam4/client/src/App.js",[],"/root/4week/molcam4/client/src/reportWebVitals.js",[],"/root/4week/molcam4/client/src/Head.js",["65","66"],"import React, {useState} from 'react';\nimport {Route,Router,Link} from \"react-router-dom\";\n\nimport Postboard from './postboard/Postboard';\n\nconst Head = () => {\n  const [boardname,setboard] = useState('');\n  \n  const handleSubmit = e => {\n    //setboard(e.target);\n    setboard(e.target.name);\n  }\n    return (\n  <div>\n    <ul>\n      <nav>\n        <div>\n          <img src={require(\"./img/logo.jpg\")}/>\n          <Link to=\"/\">부대 리뷰</Link>    \n        </div>\n      </nav>\n    </ul>\n    <div>\n      <Link to=\"/army\" name=\"육군게시판\" onClick={handleSubmit}>육군</Link>\n    </div>\n    <Route path=\"/army\"  render = {() => <Postboard name={boardname}/>}></Route>      \n  </div>\n  );\n}\n\n/* \n<Container>\n          <Navbar.Brand href=\"/\"><strong><big>SCRUM for Mad Camp</big></strong></Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ms-auto\">\n            <NavLink to={{pathname: \"/mypage\", query: { _id: $.cookie(\"login_id\")}}}>\n              <Button variant=\"primary\" style={buttonStyle}>\n                Mypage\n              </Button>\n            </NavLink>\n            <NavLink to=\"/\">\n              <Button variant=\"primary\" style={buttonStyle}>\n                list\n              </Button>\n            </NavLink>\n            <NavLink to=\"/boardWrite\">\n              <Button variant=\"primary\" style={buttonStyle}>\n                write\n              </Button>\n            </NavLink>\n            <NavLink to=\"/imageupload\">\n              <Button style={buttonStyle} variant=\"primary\">\n                image\n              </Button>\n            </NavLink>\n            <NavLink to=\"/calendar\">\n              <Button variant=\"primary\" style={buttonStyle}>\n                todo\n              </Button>\n            </NavLink>\n            <div><Button onClick={this.logout} variant=\"secondary\" style={buttonStyle}>\n              logout\n            </Button></div>\n            \n            </Nav>\n          </Navbar.Collapse>\n          </Container>*/\n\n/*\n<Route path=\"/airforce\" component={Army}></Route>\n        <Route path=\"/navy\"  component={Army}></Route>\n        <Route path=\"/marine\" component={Army}></Route>\n        <Route path=\"/social\" component={Army}></Route>\n        <Route path=\"/industry\" component={Army}></Route>\n        <Route path=\"/research\" component={Army}></Route>\n\n*/ \n\n\nexport default Head;","/root/4week/molcam4/client/src/loginRegister/Login.js",["67"],"import React,{ useState } from 'react';\nimport Form from \"./LoginForm\";\n\nfunction Login(props){\n    \n    const appStyle = {\n        height: '800px',\n          display: 'flex'\n      };\n\n    const handleSubmit = data => {\n        const json = JSON.stringify(data, null, 4);\n        console.clear();\n        console.log(json);\n    };\n\n    return (\n        <div style={appStyle}>\n            <Form onSubmit={handleSubmit} />\n        </div>\n    );\n}\n\n\n//onChange={this.handleChange} onChange={this.handleChange}\nexport default Login;","/root/4week/molcam4/client/src/loginRegister/Unfulfilled.js",["68"],"import React,{ useState } from 'react';\n\nconst Unfulfilled = (props) => {\n    \n    const appStyle = {\n        height: '800px',\n          display: 'flex'\n      };\n\n    return (\n        <div style={appStyle}>\n            애응\n        </div>\n    );\n}\n\n\n//onChange={this.handleChange} onChange={this.handleChange}\nexport default Unfulfilled;","/root/4week/molcam4/client/src/loginRegister/Register.js",[],"/root/4week/molcam4/client/src/loginRegister/Fulfilled.js",["69","70","71","72"],"/root/4week/molcam4/client/src/postboard/Postboard.js",["73","74"],"import React,{useState,useEffect} from 'react';\n\nimport { NavLink,Route } from 'react-router-dom';\nimport BoardRow from './BoardRow';\nimport Writepost from './Writepost';\n\n\n\nconst Postboard = (props) =>{\n  \n    const [boardList,setboard] = useState([]);\n    \n    \n    useEffect(() => {\n      getBoardList();\n  }, [])\n    console.log(\"게시판 이름:\"+props.name);\n    \n    const handleadd = e => {\n      //setboard(e.target);\n      setboard(boardList.reverse().concat(\n        [<BoardRow\n        key={Date.now() + Math.random() * 500}\n        unit={\"8사단\"}\n        createdAt={\"TODAY\"}>\n        </BoardRow>]\n         \n      ))\n      console.log(boardList);\n    }\n\n\n    \n    const getBoardList = () => {\n        setboard([\n          <BoardRow\n          key={Date.now() + Math.random() * 500}\n          unit={\"8사단\"}\n          createdAt={\"TODAY\"}>\n\n          </BoardRow>]\n        );\n        \n        /*\n        axios\n          .post(\"http://192.249.18.151:80/board/getBoardList\",\n          params:{\n            board:props.name\n          })\n          .then(returnData => {\n            let boardList;\n            console.log(returnData.data);\n            if (returnData.data.list.length > 0) {\n              // console.log(returnData.data.list.length);\n              const boards = returnData.data.list;\n              boardList = boards.map(item => (\n                <BoardRow\n                  key={Date.now() + Math.random() * 500}\n                  _id={item._id}\n                  createdAt={item.createdAt}\n                  title={item.title}\n                  author={item.author}\n                ></BoardRow>\n              ));\n              // console.log(boardList);\n            } else {\n              boardList = (\n                <tr>\n                  <td colSpan=\"3\">작성한 게시글이 존재하지 않습니다.</td>\n                </tr>\n              );\n            }\n            setboard(boardList);\n          })\n          .catch(err => {\n            console.log(err);\n          });*/\n      };\n    \n      \n        const divStyle = {\n          marginTop:65,\n          marginLeft:180,\n          marginRight:200,\n          marginBottom:160\n        };\n        //console.log(window.location.href);\n\n        return (\n          <div>\n            <NavLink to= \"/writepost\"> \n            <button >임시 추가 버튼</button>\n            </NavLink>\n            <h1><strong>{props.name}</strong></h1>\n            <p></p>\n            <div>\n              <table warning striped bordered hover>\n                <thead>\n                </thead>\n                <tbody>{boardList}</tbody>\n              </table>\n            </div>\n            <Route path=\"/writepost\" component={Writepost}></Route>\n          </div>\n        );\n}\n\nexport default Postboard;","/root/4week/molcam4/client/src/postboard/Detail.js",["75","76","77","78","79"],"import react,{useEffect,useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Table } from \"react-bootstrap\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\n\nconst Detail = (props) => {\n    \n    const divStyle = {\n        marginTop: 30,\n        marginLeft:200,\n        marginRight:200,\n        marginBottom:50\n    };\n\n    const [post,setpost] = useState({\n        subject:\"\",\n        board: []\n    });\n    \n    const {subject,board} = post;\n\n    useEffect(() => { //생성자 같은 함수, 이 페이지에 (/board/detail) 에 들어오면 바로 실행되는 느낌\n        if (props.location.query !== undefined) { //쿼리로 보낸게 없으면 (NavLink 로 이 페이지 주소로 연결할때 주는)\n          this.getDetail();\n        } else {\n          window.location.href = \"/\";\n        }\n    },[])\n    \n    const deleteBoard = _id => {\n        const send_param = {\n          headers,\n          _id\n        };\n        if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n          axios\n            .post(\"http://192.249.18.151:80/board/delete\", send_param) //보드라우터 가서 딜리트 실행\n            //정상 수행\n            .then(returnData => {\n              alert(\"게시글이 삭제 되었습니다.\");\n              window.location.href = \"/\";\n            })\n            //에러\n            .catch(err => {\n              console.log(err);\n              alert(\"글 삭제 실패\");\n            });\n        }\n      };\n    \n    const getComment = () => {\n    \n        const tableId = props.tableId;\n        const send_param ={\n            headers,\n            _id: props.location.query._id,\n            tableId: tableId\n        }\n            axios.post(\"http://172.10.18.147:80/comment/getCommentList\", send_param)\n            .then(returnData=>{\n                if(returnData.data.success){\n                const comment=(\n                <div>\n                    <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                                <th>\n                                    {returnData.data.comment[0].title}\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td\n                                dangerouslySetInnerHTML={{\n                                    __html: returnData.data.comment[0].content\n                                }}>\n                            \n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </div>\n            )}\n            else{\n                alert('코멘트 정보를 가져오는 것을 실패하였습니다.')\n            }\n        })\n        }\n    \n    const getDetail = () => {\n        const send_param = {\n            headers,\n            _id: props.location.query._id\n        };\n        axios\n          .post(\"http://192.249.18.151:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n          //정상 수행\n          .then(returnData => { //받아온 보드 데이터들 \n            if (returnData.data.board[0]) { //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n              const board = ( //받아온 보드 데이터를 아래 형식으로 표현\n                <div>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>{returnData.data.board[0].title}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td\n                          dangerouslySetInnerHTML={{ //\n                            __html: returnData.data.board[0].content\n                          }}\n                        ></td>\n                      </tr>\n                    </tbody>\n                  </Table>\n    \n                  <div>\n                    <NavLink\n                      to={{\n                        pathname: \"/boardWrite\",\n                        query: {\n                          title: returnData.data.board[0].title,\n                          content: returnData.data.board[0].content,\n                          _id: props.location.query._id\n                        }\n                      }}\n                    >\n                      <button block className=\"my-3\">\n                        글 수정\n                      </button>\n                    </NavLink>\n                    <button\n                      block\n                      className=\"my-3\"\n                      onClick={deleteBoard.bind(\n                        null,\n                        props.location.query._id\n                      )}\n                    >\n                      글 삭제\n                    </button>\n                  </div>\n                </div>\n              );\n              setpost({\n                ...post,\n                subject: returnData.data.board[0].title,\n                board: board //맨위에서 선언한 board : 방금 받아온 board 데이터\n              });\n            } else {\n              alert(\"글 상세 조회 실패\");\n            }\n          })\n          //에러\n          .catch(err => {\n            console.log(err);\n          });\n      };\n    \n      //onClick={this.getBoard.bind(null,this.props._id)}\n      \n    return (\n        <div>\n            <h2><strong>Subject : {subject}</strong></h2>\n            <div style={divStyle}>{board}</div>\n        </div>\n    ); //this.state.board 에 테이블이 들어감\n      \n}\n\nexport default Detail;\n","/root/4week/molcam4/client/src/postboard/Writepost.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93"],"import react, { useState,useCallback } from \"react\";\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\";\nimport Select from 'react-select';\n\nconst Writepost = (props) => {\n\n    const [post, setpost] = useState({\n        old:\"\",\n        bed:'',\n        playg:'',\n        futsal:\"\",\n        basket:\"\",\n        tenis:\"\",\n        health:\"\",\n        PC:\"\",\n        trans:\"\",\n        taste:\"\",\n        PXdis:\"\",\n        etc:\"\"\n    });\n    const [unit, setUnit] = useState(0);\n    \n    const handleChange = useCallback((inputValue) => {\n        console.log(unit);\n        console.log(inputValue === \"etc\");\n        setUnit(inputValue);\n        \n    }, []);\n\n    const options = [\n        {value: \"8\", label:\"8사단\"},\n        {value:\"etc\", label:\"기타\"},\n    ];\n\n    const {old,bed,playg,futsal,basket,tenis,health,PC,trans,taste,PXdis,etc} = post;\n\n    const handleOnChange = (e) => {\n        //e.preventDefault();\n        setpost({\n            ...post,\n            [e.target.name]:e.target.value,\n        });\n    }\n\n    const handleSubmit = (e) => {\n        /*\n        axios\n          .post(\"http://192.249.18.151:80/board/writepost\",\n          params:{\n            email:  $.cookie(\"login_id\")\n            post:post\n          })\n          .then(returnData => {\n            console.log(returnData.data);\n            if (returnData.data.list.length > 0) {\n              // console.log(returnData.data.list.length);\n              alert(\"작성 성공!\")\n              // console.log(boardList);\n            } else {\n              alert(\"오류!\");\n            }\n            setboard(boardList);\n          })\n          .catch(err => {\n            console.log(err);\n          });*/\n        alert(\"제출되었습니다!\");\n        \n    }\n\n    \n\n    const makeRadio = (name,title) => {\n        return (\n            <div>\n                {name}\n                <input type=\"radio\" name={title} value=\"1\" onChange={handleOnChange}>\n                </input>\n                1\n                <input type=\"radio\" name={title} value=\"2\" onChange={handleOnChange}>\n                </input>\n                2\n                <input type=\"radio\" name={title} value=\"3\" onChange={handleOnChange}>\n                </input>\n                3\n            </div>\n\n        )\n    }\n\n    return (\n        <div>\n            <div>\n            부대\n            <Select styles={{ // zIndex \n            menu: provided => ({...provided, zIndex: 999}) }} \n            value={options.find(op => { // choice state에 따라 디폴트 option 세팅 \n                return op.value === unit })} \n                placeholder=\"사단\" \n                onChange={(value) => { handleChange(value.value); }}\n                options={options} \n            />\n            <div>\n                <input type=\"text\" disabled={unit !== \"etc\"} name=\"unitetc\"  onChange={handleOnChange}></input>\n            </div>\n\n            </div>\n            {makeRadio(\"막사 노후도\",\"old\")}\n            <div>\n                <div>\n                침상 및 침대\n                <input type=\"radio\" name=\"bed\" value=\"notbed\" onChange={handleOnChange}>\n                </input>\n                침상\n                <input type=\"radio\" name=\"bed\" value=\"bed\" onChange={handleOnChange}>\n                </input>\n                침대\n                </div>\n            </div>\n\n            <div>\n                운동장\n                <input type=\"radio\" name=\"playg\" value=\"grass\" onChange={handleOnChange}>\n                </input>\n                인조잔디\n                <input type=\"radio\"  name=\"playg\" value=\"soil\" onChange={handleOnChange}>\n                </input>\n                흙운동장\n            </div>\n            \n            <div>\n                기타 운동장\n                <input type=\"checkbox\"  name=\"futsal\" onChange={handleOnChange}>\n                </input>\n                풋살장\n                <input type=\"checkbox\"  name=\"basket\" onChange={handleOnChange}>\n                </input>\n                농구코트\n                <input type=\"checkbox\"  name=\"tenis\" onChange={handleOnChange}>\n                </input>\n                테니스장\n            </div>\n            \n            <div>\n                복지 및 역세권\n            </div>\n            \n            {makeRadio(\"휴가\",\"vaca\")}\n        \n            <div>\n                헬스장\n                <input type=\"radio\" name=\"health\" value=\"0\" onChange={handleOnChange}>\n                </input>\n                없음\n                <input type=\"radio\" name=\"health\" value=\"1\" onChange={handleOnChange}>\n                </input>\n                1\n                <input type=\"radio\" name=\"health\" value=\"2\" onChange={handleOnChange}>\n                </input>\n                2\n                <input type=\"radio\" name=\"health\" value=\"3\" onChange={handleOnChange}>\n                </input>\n                3\n            </div>\n            <div>\n                피시방 거리\n                <input type=\"radio\" name=\"PC\" value=\"0\" onChange={handleOnChange}>\n                </input>\n                근처에 없음\n                <input type=\"radio\" name=\"PC\" value=\"3\" onChange={handleOnChange}>\n                </input>\n                3\n                <input type=\"radio\" name=\"PC\" value=\"2\" onChange={handleOnChange}>\n                </input>\n                2\n                <input type=\"radio\" name=\"PC\" value=\"1\" onChange={handleOnChange}>\n                </input>\n                1\n            </div>\n            {makeRadio(\"교통\",\"trans\")}\n            {makeRadio(\"밥\",\"taste\")}\n            {makeRadio(\"PX와의 거리\",\"PXdis\")}\n            <div>\n                기타 특이한 점\n                <input type=\"text\" name=\"etc\" value={etc} onChange={handleOnChange}></input>\n            </div>\n            <div>\n                <button onClick = {handleSubmit}>작성</button>\n            </div>\n        </div>\n        \n    )\n\n}\n\nexport default Writepost;\n","/root/4week/molcam4/client/src/loginRegister/LoginForm.js",["94","95","96"],"import React,{ useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { loadReCaptcha, ReCaptcha } from \"react-recaptcha-v3\";\n\nconst formStyle = {\n    margin: 'auto',\n    padding: '10px',\n    border: '1px solid #c9c9c9',\n    borderRadius: '5px',\n    background: '#f5f5f5',\n    width: '300px',\n      display: 'block'\n};\n\nconst labelStyle = {\n    margin: '10px 0 5px 0',\n    fontFamily: 'Arial, Helvetica, sans-serif',\n    fontSize: '15px',\n};\n\nconst inputStyle = {\n    margin: '5px 0 10px 0',\n    padding: '5px', \n    border: '1px solid #bfbfbf',\n    borderRadius: '3px',\n    boxSizing: 'border-box',\n    width: '100%'\n};\n\nconst submitStyle = {\n    margin: '10px 0 0 0',\n    padding: '7px 10px',\n    border: '1px solid #efffff',\n    borderRadius: '3px',\n    background: '#3085d6',\n    width: '100%', \n    fontSize: '15px',\n    color: 'white',\n    display: 'block'\n};\n\nconst Field = React.forwardRef(({placeholder, type}, ref) => {\n    return (\n      <div>\n        <input ref={ref} type={type} placeholder={placeholder} style={inputStyle} />\n      </div>\n    );\n});\n\nconst verifyCallback = recaptchaToken => {\n    // Here you will get the final recaptchaToken!!!\n    console.log(recaptchaToken, \"<= your recaptcha token\");\n  };\n\nconst Form = ({onSubmit}) => {\n    const usernameRef = React.useRef();\n    const passwordRef = React.useRef();\n    let history = useHistory();\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        console.log(\"username: \"+usernameRef.current.value);\n        console.log(\"pw: \"+passwordRef.current.value);\n        \n        if (usernameRef.current.value === \"\" && passwordRef.current.value=== \"\") {\n            alert(\"이메일 주소를 입력해주세요.\");\n            //usernameRef.focus();\n            //return;\n          } else if (passwordRef.current.value === \"\") {\n            alert(\"비밀번호를 입력해주세요.\");\n            //passwordRef.focus();\n            //return;\n          } else{\n            /*\n            axios //비동기 통신\n              .post(\"http://192.249.18.151:80/member/login\", send_param) //서버에 저 url 주소 보내주기\n              //정상 수행\n              .then(returnData => {\n                if (returnData.data.message) {\n                  // console.log(\"login_id:\" + returnData.data._id);\n                  $.cookie(\"login_id\", returnData.data._id, { expires: 1 });\n                  $.cookie(\"login_name\", returnData.data.name, { expires: 1 });\n                  $.cookie(\"login_email\", returnData.data.email, { expires: 1 }); //로그인 되면 쿠키값을 설정해줌 -> 쿠키값 여부로 로그인 여부 확인\n                  alert(returnData.data.message);\n    \n                } else {\n                    alert(returnData.data.message); //로그인 실패\n                }\n              }).catch(err => {\n                console.log(err);\n              });*/\n              \n            const data = {\n                username: usernameRef.current.value,\n                password: passwordRef.current.value\n            };\n            //window.location.reload();\n            onSubmit(data);\n            history.goBack()\n          }\n        \n    };\n\n\n    return (\n      <form style={formStyle} onSubmit={handleSubmit} >\n        <Field ref={usernameRef} placeholder=\"아이디\" type=\"text\" />\n        <Field ref={passwordRef} placeholder=\"비밀번호\" type=\"password\" />\n        <ReCaptcha\n            sitekey=\"6LfGieAUAAAAAJSOoqXS5VQdT_e5AH8u0n2e1PDb\"\n            action=\"login\"\n            verifyCallback={verifyCallback}\n          />\n\n        <div>\n          <button style={submitStyle} type=\"submit\">로그인</button>\n        </div>\n      </form>\n    );\n};\n\nexport default Form;","/root/4week/molcam4/client/src/postboard/BoardRow.js",["97"],"import react from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst BoardRow = (props) => {\n    console.log(props);\n    \n    return( \n    <tr>\n        <NavLink to={{ pathname: \"/army/detail\", query: { _id: props._id } }}>\n            <td>{props.unit}</td> \n        </NavLink>\n        <NavLink to={{ pathname: \"/army/detail\", query: { _id: props._id } }}>\n            <td>{props.createdAt}</td>\n        </NavLink>\n    </tr> \n    );\n}\n\n\nexport default BoardRow;\n",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":15,"nodeType":"104","messageId":"105","endLine":2,"endColumn":21},{"ruleId":"106","severity":1,"message":"107","line":18,"column":11,"nodeType":"108","endLine":18,"endColumn":49},{"ruleId":"102","severity":1,"message":"109","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},{"ruleId":"102","severity":1,"message":"109","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},{"ruleId":"102","severity":1,"message":"110","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"111","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":9},{"ruleId":"102","severity":1,"message":"112","line":9,"column":7,"nodeType":"104","messageId":"105","endLine":9,"endColumn":17},{"ruleId":"102","severity":1,"message":"113","line":111,"column":15,"nodeType":"104","messageId":"105","endLine":111,"endColumn":19},{"ruleId":"102","severity":1,"message":"114","line":19,"column":11,"nodeType":"104","messageId":"105","endLine":19,"endColumn":20},{"ruleId":"102","severity":1,"message":"115","line":81,"column":15,"nodeType":"104","messageId":"105","endLine":81,"endColumn":23},{"ruleId":"102","severity":1,"message":"116","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"117","severity":1,"message":"118","line":31,"column":7,"nodeType":"119","endLine":31,"endColumn":9,"suggestions":"120"},{"ruleId":"102","severity":1,"message":"121","line":54,"column":11,"nodeType":"104","messageId":"105","endLine":54,"endColumn":21},{"ruleId":"102","severity":1,"message":"122","line":65,"column":23,"nodeType":"104","messageId":"105","endLine":65,"endColumn":30},{"ruleId":"102","severity":1,"message":"123","line":94,"column":11,"nodeType":"104","messageId":"105","endLine":94,"endColumn":20},{"ruleId":"102","severity":1,"message":"116","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},{"ruleId":"102","severity":1,"message":"111","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":9},{"ruleId":"117","severity":1,"message":"124","line":29,"column":8,"nodeType":"119","endLine":29,"endColumn":10,"suggestions":"125"},{"ruleId":"102","severity":1,"message":"126","line":36,"column":12,"nodeType":"104","messageId":"105","endLine":36,"endColumn":15},{"ruleId":"102","severity":1,"message":"127","line":36,"column":16,"nodeType":"104","messageId":"105","endLine":36,"endColumn":19},{"ruleId":"102","severity":1,"message":"128","line":36,"column":20,"nodeType":"104","messageId":"105","endLine":36,"endColumn":25},{"ruleId":"102","severity":1,"message":"129","line":36,"column":26,"nodeType":"104","messageId":"105","endLine":36,"endColumn":32},{"ruleId":"102","severity":1,"message":"130","line":36,"column":33,"nodeType":"104","messageId":"105","endLine":36,"endColumn":39},{"ruleId":"102","severity":1,"message":"131","line":36,"column":40,"nodeType":"104","messageId":"105","endLine":36,"endColumn":45},{"ruleId":"102","severity":1,"message":"132","line":36,"column":46,"nodeType":"104","messageId":"105","endLine":36,"endColumn":52},{"ruleId":"102","severity":1,"message":"133","line":36,"column":53,"nodeType":"104","messageId":"105","endLine":36,"endColumn":55},{"ruleId":"102","severity":1,"message":"134","line":36,"column":56,"nodeType":"104","messageId":"105","endLine":36,"endColumn":61},{"ruleId":"102","severity":1,"message":"135","line":36,"column":62,"nodeType":"104","messageId":"105","endLine":36,"endColumn":67},{"ruleId":"102","severity":1,"message":"136","line":36,"column":68,"nodeType":"104","messageId":"105","endLine":36,"endColumn":73},{"ruleId":"102","severity":1,"message":"109","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},{"ruleId":"102","severity":1,"message":"137","line":3,"column":10,"nodeType":"104","messageId":"105","endLine":3,"endColumn":23},{"ruleId":"102","severity":1,"message":"138","line":15,"column":7,"nodeType":"104","messageId":"105","endLine":15,"endColumn":17},{"ruleId":"102","severity":1,"message":"116","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":13},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'forwardRef' is defined but never used.","'$' is defined but never used.","'inputStyle' is assigned a value but never used.","'data' is assigned a value but never used.","'handleadd' is assigned a value but never used.","'divStyle' is assigned a value but never used.","'react' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.location.query'. Either include it or remove the dependency array.","ArrayExpression",["141"],"'getComment' is assigned a value but never used.","'comment' is assigned a value but never used.","'getDetail' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'unit'. Either include it or remove the dependency array.",["142"],"'old' is assigned a value but never used.","'bed' is assigned a value but never used.","'playg' is assigned a value but never used.","'futsal' is assigned a value but never used.","'basket' is assigned a value but never used.","'tenis' is assigned a value but never used.","'health' is assigned a value but never used.","'PC' is assigned a value but never used.","'trans' is assigned a value but never used.","'taste' is assigned a value but never used.","'PXdis' is assigned a value but never used.","'loadReCaptcha' is defined but never used.","'labelStyle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},"Update the dependencies array to be: [props.location.query]",{"range":"147","text":"148"},"Update the dependencies array to be: [unit]",{"range":"149","text":"150"},[797,799],"[props.location.query]",[649,651],"[unit]"]