{"ast":null,"code":"var _jsxFileName = \"/root/4week/molcam4/client/src/postboard/Detail.js\",\n    _s = $RefreshSig$();\n\nimport react, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Table } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\n\nconst Detail = props => {\n  _s();\n\n  const divStyle = {\n    marginTop: 30,\n    marginLeft: 200,\n    marginRight: 200,\n    marginBottom: 50\n  };\n  const [post, setpost] = useState({\n    subject: \"\",\n    board: []\n  });\n  const {\n    subject,\n    board\n  } = post;\n  useEffect(() => {\n    //생성자 같은 함수, 이 페이지에 (/board/detail) 에 들어오면 바로 실행되는 느낌\n    if (props.location.query !== undefined) {\n      //쿼리로 보낸게 없으면 (NavLink 로 이 페이지 주소로 연결할때 주는)\n      this.getDetail();\n    } else {\n      window.location.href = \"/\";\n    }\n  }, []);\n\n  const deleteBoard = _id => {\n    const send_param = {\n      headers,\n      _id\n    };\n\n    if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n      axios.post(\"http://192.249.18.151:80/board/delete\", send_param) //보드라우터 가서 딜리트 실행\n      //정상 수행\n      .then(returnData => {\n        alert(\"게시글이 삭제 되었습니다.\");\n        window.location.href = \"/\";\n      }) //에러\n      .catch(err => {\n        console.log(err);\n        alert(\"글 삭제 실패\");\n      });\n    }\n  };\n\n  const getComment = () => {\n    const tableId = props.tableId;\n    const send_param = {\n      headers,\n      _id: props.location.query._id,\n      tableId: tableId\n    };\n    axios.post(\"http://172.10.18.147:80/comment/getCommentList\", send_param).then(returnData => {\n      if (returnData.data.success) {\n        const comment = /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: returnData.data.comment[0].title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  dangerouslySetInnerHTML: {\n                    __html: returnData.data.comment[0].content\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this);\n      } else {\n        alert('코멘트 정보를 가져오는 것을 실패하였습니다.');\n      }\n    });\n  };\n\n  const getDetail = () => {\n    const send_param = {\n      headers,\n      _id: props.location.query._id\n    };\n    axios.post(\"http://192.249.18.151:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n    //정상 수행\n    .then(returnData => {\n      //받아온 보드 데이터들 \n      if (returnData.data.board[0]) {\n        //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n        const board =\n        /*#__PURE__*/\n        //받아온 보드 데이터를 아래 형식으로 표현\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Table, {\n            striped: true,\n            bordered: true,\n            hover: true,\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: returnData.data.board[0].title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(\"td\", {\n                  dangerouslySetInnerHTML: {\n                    //\n                    __html: returnData.data.board[0].content\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(NavLink, {\n              to: {\n                pathname: \"/boardWrite\",\n                query: {\n                  title: returnData.data.board[0].title,\n                  content: returnData.data.board[0].content,\n                  _id: props.location.query._id\n                }\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                block: true,\n                className: \"my-3\",\n                children: \"\\uAE00 \\uC218\\uC815\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              block: true,\n              className: \"my-3\",\n              onClick: deleteBoard.bind(null, props.location.query._id),\n              children: \"\\uAE00 \\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this);\n\n        setpost({ ...post,\n          subject: returnData.data.board[0].title,\n          board: board //맨위에서 선언한 board : 방금 받아온 board 데이터\n\n        });\n      } else {\n        alert(\"글 상세 조회 실패\");\n      }\n    }) //에러\n    .catch(err => {\n      console.log(err);\n    });\n  }; //onClick={this.getBoard.bind(null,this.props._id)}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: [\"Subject : \", subject]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: divStyle,\n      children: board\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this); //this.state.board 에 테이블이 들어감\n};\n\n_s(Detail, \"RHo0JhQIOx8wPEtruGbyirxA64Y=\");\n\n_c = Detail;\nexport default Detail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Detail\");","map":{"version":3,"sources":["/root/4week/molcam4/client/src/postboard/Detail.js"],"names":["react","useEffect","useState","NavLink","Table","axios","defaults","withCredentials","headers","Detail","props","divStyle","marginTop","marginLeft","marginRight","marginBottom","post","setpost","subject","board","location","query","undefined","getDetail","window","href","deleteBoard","_id","send_param","confirm","then","returnData","alert","catch","err","console","log","getComment","tableId","data","success","comment","title","__html","content","pathname","bind"],"mappings":"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","sourcesContent":["import react,{useEffect,useState} from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { Table } from \"react-bootstrap\";\nimport axios from \"axios\";\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\n\nconst Detail = (props) => {\n    \n    const divStyle = {\n        marginTop: 30,\n        marginLeft:200,\n        marginRight:200,\n        marginBottom:50\n    };\n\n    const [post,setpost] = useState({\n        subject:\"\",\n        board: []\n    });\n    \n    const {subject,board} = post;\n\n    useEffect(() => { //생성자 같은 함수, 이 페이지에 (/board/detail) 에 들어오면 바로 실행되는 느낌\n        if (props.location.query !== undefined) { //쿼리로 보낸게 없으면 (NavLink 로 이 페이지 주소로 연결할때 주는)\n          this.getDetail();\n        } else {\n          window.location.href = \"/\";\n        }\n    },[])\n    \n    const deleteBoard = _id => {\n        const send_param = {\n          headers,\n          _id\n        };\n        if (window.confirm(\"정말 삭제하시겠습니까?\")) {\n          axios\n            .post(\"http://192.249.18.151:80/board/delete\", send_param) //보드라우터 가서 딜리트 실행\n            //정상 수행\n            .then(returnData => {\n              alert(\"게시글이 삭제 되었습니다.\");\n              window.location.href = \"/\";\n            })\n            //에러\n            .catch(err => {\n              console.log(err);\n              alert(\"글 삭제 실패\");\n            });\n        }\n      };\n    \n    const getComment = () => {\n    \n        const tableId = props.tableId;\n        const send_param ={\n            headers,\n            _id: props.location.query._id,\n            tableId: tableId\n        }\n            axios.post(\"http://172.10.18.147:80/comment/getCommentList\", send_param)\n            .then(returnData=>{\n                if(returnData.data.success){\n                const comment=(\n                <div>\n                    <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                                <th>\n                                    {returnData.data.comment[0].title}\n                                </th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr>\n                                <td\n                                dangerouslySetInnerHTML={{\n                                    __html: returnData.data.comment[0].content\n                                }}>\n                            \n                                </td>\n                            </tr>\n                        </tbody>\n                    </Table>\n                </div>\n            )}\n            else{\n                alert('코멘트 정보를 가져오는 것을 실패하였습니다.')\n            }\n        })\n        }\n    \n    const getDetail = () => {\n        const send_param = {\n            headers,\n            _id: props.location.query._id\n        };\n        axios\n          .post(\"http://192.249.18.151:80/board/detail\", send_param) //보드 라우터의 디테일 실행 (파람을 보내기)\n          //정상 수행\n          .then(returnData => { //받아온 보드 데이터들 \n            if (returnData.data.board[0]) { //받아온 보드 데이터는 한개이므로 걍 0번째 인덱스로 하면됨\n              const board = ( //받아온 보드 데이터를 아래 형식으로 표현\n                <div>\n                  <Table striped bordered hover>\n                    <thead>\n                      <tr>\n                        <th>{returnData.data.board[0].title}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr>\n                        <td\n                          dangerouslySetInnerHTML={{ //\n                            __html: returnData.data.board[0].content\n                          }}\n                        ></td>\n                      </tr>\n                    </tbody>\n                  </Table>\n    \n                  <div>\n                    <NavLink\n                      to={{\n                        pathname: \"/boardWrite\",\n                        query: {\n                          title: returnData.data.board[0].title,\n                          content: returnData.data.board[0].content,\n                          _id: props.location.query._id\n                        }\n                      }}\n                    >\n                      <button block className=\"my-3\">\n                        글 수정\n                      </button>\n                    </NavLink>\n                    <button\n                      block\n                      className=\"my-3\"\n                      onClick={deleteBoard.bind(\n                        null,\n                        props.location.query._id\n                      )}\n                    >\n                      글 삭제\n                    </button>\n                  </div>\n                </div>\n              );\n              setpost({\n                ...post,\n                subject: returnData.data.board[0].title,\n                board: board //맨위에서 선언한 board : 방금 받아온 board 데이터\n              });\n            } else {\n              alert(\"글 상세 조회 실패\");\n            }\n          })\n          //에러\n          .catch(err => {\n            console.log(err);\n          });\n      };\n    \n      //onClick={this.getBoard.bind(null,this.props._id)}\n      \n    return (\n        <div>\n            <h2><strong>Subject : {subject}</strong></h2>\n            <div style={divStyle}>{board}</div>\n        </div>\n    ); //this.state.board 에 테이블이 들어감\n      \n}\n\nexport default Detail;\n"]},"metadata":{},"sourceType":"module"}