{"ast":null,"code":"var _jsxFileName = \"/root/4week/molcam4/client/src/loginRegister/Fulfilled.js\",\n    _s = $RefreshSig$();\n\nimport React, { forwardRef, useState } from 'react';\nimport axios from \"axios\"; //http 라이브러리, http를 비동기 통신할때?\n\nimport $ from \"jquery\";\nimport \"jquery.cookie\"; //로그인, 로그아웃 처리 할때 (쿠키 있 : 게시글 보여줌 / 쿠키 없 : 로그인, 회원가입 창 보여줌)\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\naxios.defaults.withCredentials = true;\nconst headers = {\n  withCredentials: true\n};\nconst inputStyle = {\n  margin: '5px 0 10px 0',\n  padding: '5px',\n  border: '1px solid #bfbfbf',\n  borderRadius: '3px',\n  boxSizing: 'border-box',\n  width: '100%'\n};\n\nconst Fulfilled = props => {\n  _s();\n\n  const regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n  const regExp2 = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/;\n  const [info, setinfo] = useState({\n    email: '',\n    name: '',\n    password: ''\n  });\n  const {\n    email,\n    name,\n    password\n  } = info;\n\n  const register = () => {\n    console.log(info);\n\n    if (email === \"\" || email === undefined) {\n      alert(\"이메일 주소를 입력해주세요.\");\n      return;\n    } else if (email.match(regExp) === null || email.match(regExp) === undefined) {\n      alert(\"이메일 형식에 맞게 입력해주세요.\");\n      setinfo({ ...info,\n        \"email\": \"\"\n      });\n      return;\n    } else if (name === \"\" || name === undefined) {\n      alert(\"이름을 입력해주세요.\");\n      return;\n    } else if (password === \"\" || password === undefined) {\n      alert(\"비밀번호를 입력해주세요.\");\n      return;\n    } else if (password.match(regExp2) === null || password.match(regExp2) === undefined) {\n      alert(\"비밀번호를 숫자와 문자, 특수문자 포함 8~16자리로 입력해주세요.\");\n      setinfo({ ...info,\n        \"password\": \"\"\n      });\n      return;\n    }\n\n    const send_param = {\n      //파라미터들을 모아놓은 send_param 변수를 보내는 ?\n      headers,\n      //동일 기원..? 통신 할때만다 먼저 넘겨주기\n      email: email,\n      name: name,\n      password: password\n    };\n    axios.post(\"http://172.10.18.169:80/user/signupapp\", send_param) //정상 수행\n    .then(returnData => {\n      //돌아온 데이터 체크\n      if (returnData.data.message) {\n        alert(returnData.data.message); //이메일 중복 체크\n\n        if (returnData.data.dupYn === \"1\") {\n          //이메일이 중복이면 \n          email.value = \"\"; //이메일 입력칸에 입력되어있는거 초기화\n\n          this.joinEmail.focus(); //이메일 입력란에 포커스, 바로 다시 입력할 수 있게\n        } else {\n          //중복아니면 디비에 저장되고 모든 값을 초기화\n          this.joinEmail.value = \"\";\n          this.joinName.value = \"\";\n          this.joinPw.value = \"\";\n        }\n      } else {\n        alert(\"회원가입 실패\");\n      }\n    }) //에러\n    .catch(err => {\n      console.log(err);\n    });\n  };\n\n  const onChange = e => {\n    console.log(info);\n    console.log(e.target.name);\n    console.log(e.target.value);\n    setinfo({ ...info,\n      [e.target.name]: e.target.value\n    });\n    console.log(info);\n  };\n\n  const sendEmail = e => {\n    e.preventDefault();\n    console.log(info);\n    console.log(info.email);\n    const data = {\n      //현재의 email state값을 data객체로 감쌌다\n      email: info.email\n    };\n    /*\n    fetch('http://localhost:3001/sendEmail',{      //sendEmail 라우터로 보내버리기\n        method: \"post\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(data),\n    })\n    .then(res => res.json())\n    .then(json => {\n        \n    })*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        maxLength: \"100\",\n        name: \"email\",\n        placeholder: \"\\uC774\\uBA54\\uC77C\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendEmail,\n        children: \" \\uBA54\\uC77C \\uC778\\uC99D \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      maxLength: \"20\",\n      placeholder: \"\\uC774\\uB984\",\n      name: \"name\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      maxLength: \"64\",\n      name: \"password\",\n      placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      onChange: onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: register,\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Fulfilled, \"xAoAASqZI4Iv2lu1+sa2LOmlwQQ=\");\n\n_c = Fulfilled;\nexport default Fulfilled;\n/* <ReCaptcha\n            sitekey=\"6LfGieAUAAAAAJSOoqXS5VQdT_e5AH8u0n2e1PDb\"\n            action=\"login\"\n            verifyCallback={verifyCallback}\n          />\n          */\n\nvar _c;\n\n$RefreshReg$(_c, \"Fulfilled\");","map":{"version":3,"sources":["/root/4week/molcam4/client/src/loginRegister/Fulfilled.js"],"names":["React","forwardRef","useState","axios","$","defaults","withCredentials","headers","inputStyle","margin","padding","border","borderRadius","boxSizing","width","Fulfilled","props","regExp","regExp2","info","setinfo","email","name","password","register","console","log","undefined","alert","match","send_param","post","then","returnData","data","message","dupYn","value","joinEmail","focus","joinName","joinPw","catch","err","onChange","e","target","sendEmail","preventDefault"],"mappings":"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","sourcesContent":["import React,{ forwardRef,useState } from 'react';\nimport axios from \"axios\"; //http 라이브러리, http를 비동기 통신할때?\nimport $ from \"jquery\";\nimport {} from \"jquery.cookie\"; //로그인, 로그아웃 처리 할때 (쿠키 있 : 게시글 보여줌 / 쿠키 없 : 로그인, 회원가입 창 보여줌)\naxios.defaults.withCredentials = true;\nconst headers = { withCredentials: true };\n\nconst inputStyle = {\n    margin: '5px 0 10px 0',\n    padding: '5px', \n    border: '1px solid #bfbfbf',\n    borderRadius: '3px',\n    boxSizing: 'border-box',\n    width: '100%'\n};\n\nconst Fulfilled = (props) => {\n    const regExp = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*@[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z]{2,3}$/i;\n    const regExp2 = /^(?=.*[a-zA-Z])(?=.*[!@#$%^*+=-])(?=.*[0-9]).{8,16}$/;\n\n    const [info, setinfo] = useState({\n        email:'',\n        name:'',\n        password:'',\n    });\n\n    const { email,name,password } = info;\n\n    const register = () => {\n      console.log(info);\n      if (email === \"\" || email === undefined) {\n        alert(\"이메일 주소를 입력해주세요.\");\n        return;\n      } else if (\n        email.match(regExp) === null ||\n        email.match(regExp) === undefined\n      ) {\n        alert(\"이메일 형식에 맞게 입력해주세요.\");\n        setinfo({\n          ...info,\n          \"email\":\"\",\n        });\n        return;\n      } else if (name === \"\" || name === undefined) {\n        alert(\"이름을 입력해주세요.\");\n        return;\n      } else if (password === \"\" || password === undefined) {\n        alert(\"비밀번호를 입력해주세요.\");\n        return;\n      } else if (\n        password.match(regExp2) === null ||\n        password.match(regExp2) === undefined\n      ) {\n        alert(\"비밀번호를 숫자와 문자, 특수문자 포함 8~16자리로 입력해주세요.\");\n        setinfo({\n          ...info,\n          \"password\":\"\",\n        });\n        return;\n      }\n  \n      const send_param = { //파라미터들을 모아놓은 send_param 변수를 보내는 ?\n        headers,     //동일 기원..? 통신 할때만다 먼저 넘겨주기\n        email: email,\n        name: name,\n        password: password\n      };\n      axios\n        .post(\"http://172.10.18.169:80/user/signupapp\", send_param)\n        //정상 수행\n        .then(returnData => { //돌아온 데이터 체크\n          if (returnData.data.message) {\n            alert(returnData.data.message);\n            //이메일 중복 체크\n            if (returnData.data.dupYn === \"1\") { //이메일이 중복이면 \n              email.value = \"\"; //이메일 입력칸에 입력되어있는거 초기화\n              this.joinEmail.focus(); //이메일 입력란에 포커스, 바로 다시 입력할 수 있게\n            } else { //중복아니면 디비에 저장되고 모든 값을 초기화\n              this.joinEmail.value = \"\";\n              this.joinName.value = \"\";\n              this.joinPw.value = \"\";\n            }\n          } else {\n            alert(\"회원가입 실패\");\n          }\n        })\n        //에러\n        .catch(err => {\n          console.log(err);\n        });\n\n\n    }\n\n    const onChange = (e) => {\n        console.log(info);\n        console.log(e.target.name);\n        console.log(e.target.value);\n        setinfo({\n            ...info,\n            [e.target.name]:e.target.value,\n        });\n        console.log(info);\n    }\n\n    const sendEmail = (e) => {\n        e.preventDefault();\n        console.log(info);\n        console.log(info.email);\n        const data = {                      //현재의 email state값을 data객체로 감쌌다\n            email: info.email\n        }\n        /*\n        fetch('http://localhost:3001/sendEmail',{      //sendEmail 라우터로 보내버리기\n            method: \"post\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(data),\n        })\n        .then(res => res.json())\n        .then(json => {\n            \n        })*/\n    }\n\n    return (\n        <div>\n            <div>\n          <input\n            type=\"text\"\n            maxLength=\"100\"\n            name=\"email\"\n            placeholder=\"이메일\"\n            onChange={onChange}\n          />\n          <button onClick={sendEmail}> 메일 인증 </button>\n          </div>\n          <input\n            type=\"text\"\n            maxLength=\"20\"\n            placeholder=\"이름\"\n            name=\"name\"\n            onChange={onChange}\n          />\n          <input\n            type=\"password\"\n            maxLength=\"64\"\n            name=\"password\"\n            placeholder=\"비밀번호\"\n            onChange={onChange}\n          />\n          <button\n            type=\"button\"\n            onClick={register}>\n                회원가입\n            </button>\n          \n        </div>\n    );\n}\n\n\n\nexport default Fulfilled;\n\n/* <ReCaptcha\n            sitekey=\"6LfGieAUAAAAAJSOoqXS5VQdT_e5AH8u0n2e1PDb\"\n            action=\"login\"\n            verifyCallback={verifyCallback}\n          />\n          */"]},"metadata":{},"sourceType":"module"}