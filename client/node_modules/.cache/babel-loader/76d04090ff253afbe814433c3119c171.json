{"ast":null,"code":"var _jsxFileName = \"/root/4week/molcam4/client/src/postboard/Postboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NavLink, Route } from 'react-router-dom';\nimport BoardRow from './BoardRow';\nimport Writepost from './Writepost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Postboard = props => {\n  _s();\n\n  const [boardList, setboard] = useState([]);\n  useEffect(() => {\n    getBoardList();\n  }, []);\n  console.log(\"게시판 이름:\" + props.name);\n\n  const handleadd = e => {\n    //setboard(e.target);\n    setboard(boardList.reverse().concat([/*#__PURE__*/_jsxDEV(BoardRow, {\n      unit: \"8사단\",\n      createdAt: \"TODAY\"\n    }, Date.now() + Math.random() * 500, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 10\n    }, this)]));\n    console.log(boardList);\n  };\n\n  const getBoardList = () => {\n    setboard([/*#__PURE__*/_jsxDEV(BoardRow, {\n      unit: \"8사단\",\n      createdAt: \"TODAY\"\n    }, Date.now() + Math.random() * 500, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]);\n    /*\n    axios\n      .post(\"http://192.249.18.151:80/board/getBoardList\",\n      params:{\n        board:props.name\n      })\n      .then(returnData => {\n        let boardList;\n        console.log(returnData.data);\n        if (returnData.data.list.length > 0) {\n          // console.log(returnData.data.list.length);\n          const boards = returnData.data.list;\n          boardList = boards.map(item => (\n            <BoardRow\n              key={Date.now() + Math.random() * 500}\n              _id={item._id}\n              createdAt={item.createdAt}\n              title={item.title}\n              author={item.author}\n            ></BoardRow>\n          ));\n          // console.log(boardList);\n        } else {\n          boardList = (\n            <tr>\n              <td colSpan=\"3\">작성한 게시글이 존재하지 않습니다.</td>\n            </tr>\n          );\n        }\n        setboard(boardList);\n      })\n      .catch(err => {\n        console.log(err);\n      });*/\n  };\n\n  const divStyle = {\n    marginTop: 65,\n    marginLeft: 180,\n    marginRight: 200,\n    marginBottom: 160\n  }; //console.log(window.location.href);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/writepost\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uC784\\uC2DC \\uCD94\\uAC00 \\uBC84\\uD2BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        warning: true,\n        striped: true,\n        bordered: true,\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: boardList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/writepost\",\n      component: Writepost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Postboard, \"SHQTziWD6EhGdWt/ta0d3/ZL7mE=\");\n\n_c = Postboard;\nexport default Postboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Postboard\");","map":{"version":3,"sources":["/root/4week/molcam4/client/src/postboard/Postboard.js"],"names":["React","useState","useEffect","NavLink","Route","BoardRow","Writepost","Postboard","props","boardList","setboard","getBoardList","console","log","name","handleadd","e","reverse","concat","Date","now","Math","random","divStyle","marginTop","marginLeft","marginRight","marginBottom"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AAEA,SAASC,OAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAIA,MAAMC,SAAS,GAAIC,KAAD,IAAU;AAAA;;AAExB,QAAM,CAACC,SAAD,EAAWC,QAAX,IAAuBT,QAAQ,CAAC,EAAD,CAArC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY;AACf,GAFU,EAER,EAFQ,CAAT;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAUL,KAAK,CAACM,IAA5B;;AAEA,QAAMC,SAAS,GAAGC,CAAC,IAAI;AACrB;AACAN,IAAAA,QAAQ,CAACD,SAAS,CAACQ,OAAV,GAAoBC,MAApB,CACP,cAAC,QAAC,QAAD;AAED,MAAA,IAAI,EAAE,KAFL;AAGD,MAAA,SAAS,EAAE;AAHV,OACIC,IAAI,CAACC,GAAL,KAAaC,IAAI,CAACC,MAAL,KAAgB,GADjC;AAAA;AAAA;AAAA;AAAA,YAAD,CADO,CAAD,CAAR;AAQAV,IAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACD,GAXD;;AAeA,QAAME,YAAY,GAAG,MAAM;AACvBD,IAAAA,QAAQ,CAAC,cACP,QAAC,QAAD;AAEA,MAAA,IAAI,EAAE,KAFN;AAGA,MAAA,SAAS,EAAE;AAHX,OACKS,IAAI,CAACC,GAAL,KAAaC,IAAI,CAACC,MAAL,KAAgB,GADlC;AAAA;AAAA;AAAA;AAAA,YADO,CAAD,CAAR;AASA;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,GA5CH;;AA+CI,QAAMC,QAAQ,GAAG;AACfC,IAAAA,SAAS,EAAC,EADK;AAEfC,IAAAA,UAAU,EAAC,GAFI;AAGfC,IAAAA,WAAW,EAAC,GAHG;AAIfC,IAAAA,YAAY,EAAC;AAJE,GAAjB,CAxEoB,CA8EpB;;AAEA,sBACE;AAAA,4BACE,QAAC,OAAD;AAAS,MAAA,EAAE,EAAE,YAAb;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,6BAAI;AAAA,kBAASnB,KAAK,CAACM;AAAf;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA,6BACE;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,OAAO,MAAtB;AAAuB,QAAA,QAAQ,MAA/B;AAAgC,QAAA,KAAK,MAArC;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA,gBADF,eAGE;AAAA,oBAAQL;AAAR;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAaE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,YAAZ;AAAyB,MAAA,SAAS,EAAEH;AAApC;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBP,CAjGD;;GAAMC,S;;KAAAA,S;AAmGN,eAAeA,SAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\n\nimport { NavLink,Route } from 'react-router-dom';\nimport BoardRow from './BoardRow';\nimport Writepost from './Writepost';\n\n\n\nconst Postboard = (props) =>{\n  \n    const [boardList,setboard] = useState([]);\n    \n    \n    useEffect(() => {\n      getBoardList();\n  }, [])\n    console.log(\"게시판 이름:\"+props.name);\n    \n    const handleadd = e => {\n      //setboard(e.target);\n      setboard(boardList.reverse().concat(\n        [<BoardRow\n        key={Date.now() + Math.random() * 500}\n        unit={\"8사단\"}\n        createdAt={\"TODAY\"}>\n        </BoardRow>]\n         \n      ))\n      console.log(boardList);\n    }\n\n\n    \n    const getBoardList = () => {\n        setboard([\n          <BoardRow\n          key={Date.now() + Math.random() * 500}\n          unit={\"8사단\"}\n          createdAt={\"TODAY\"}>\n\n          </BoardRow>]\n        );\n        \n        /*\n        axios\n          .post(\"http://192.249.18.151:80/board/getBoardList\",\n          params:{\n            board:props.name\n          })\n          .then(returnData => {\n            let boardList;\n            console.log(returnData.data);\n            if (returnData.data.list.length > 0) {\n              // console.log(returnData.data.list.length);\n              const boards = returnData.data.list;\n              boardList = boards.map(item => (\n                <BoardRow\n                  key={Date.now() + Math.random() * 500}\n                  _id={item._id}\n                  createdAt={item.createdAt}\n                  title={item.title}\n                  author={item.author}\n                ></BoardRow>\n              ));\n              // console.log(boardList);\n            } else {\n              boardList = (\n                <tr>\n                  <td colSpan=\"3\">작성한 게시글이 존재하지 않습니다.</td>\n                </tr>\n              );\n            }\n            setboard(boardList);\n          })\n          .catch(err => {\n            console.log(err);\n          });*/\n      };\n    \n      \n        const divStyle = {\n          marginTop:65,\n          marginLeft:180,\n          marginRight:200,\n          marginBottom:160\n        };\n        //console.log(window.location.href);\n\n        return (\n          <div>\n            <NavLink to= \"/writepost\"> \n            <button >임시 추가 버튼</button>\n            </NavLink>\n            <h1><strong>{props.name}</strong></h1>\n            <p></p>\n            <div>\n              <table warning striped bordered hover>\n                <thead>\n                </thead>\n                <tbody>{boardList}</tbody>\n              </table>\n            </div>\n            <Route path=\"/writepost\" component={Writepost}></Route>\n          </div>\n        );\n}\n\nexport default Postboard;"]},"metadata":{},"sourceType":"module"}